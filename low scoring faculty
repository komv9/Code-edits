with Low_Score_Faculty as (
        Select  f.id as Faculty_Id, concat(f.first_name," ",f.last_name) as Faculty_Name,f.overall_score as Score,cs.id as Classschedule_id, 
                cs.class_date as Class_Date, cs.start_time as Class_Time,weekday(cs.class_date) as WeekDay,
                cl.class_name as Class_Name,csb.demo_class as Demo_Class,csb.attended_class as attended_class,rf.Classschedule_id as RF_Classschdeule_id,
                vr.overall_comments as overall_comments, vr.overall_rating as Overall_Rating,
            
                concat("https://media.bambinos.live/", vr.file_name) as Video_Link,
                
                concat("https://www.bambinos.live/admin/recordingfeedback/", vr.id) as Feedback_Link, 
            
                DENSE_RANK() over(partition by f.id,cs.class_date order by cs.start_time asc) as Class_Number_of_Each_Day
            
        /*    time(vr.recording_start) as Record_Start,time(vr.recording_end) as Record_End,
             sum(timestampdiff(minute,time(vr.recording_start),time(vr.recording_end))) as Record_Time,
             sum(timestampdiff(minute,(CASE WHEN time(cs.start_time) >= time(vr.recording_start) THEN time(cs.start_time) WHEN time(cs.start_time) < time(vr.recording_start) THEN time(vr.recording_start) END),
             (CASE WHEN time(cs.end_time) <= time(vr.recording_end) THEN time(cs.end_time) WHEN time(cs.end_time) > time(vr.recording_end) THEN time(vr.recording_end) END))) as Record_Duration_Minutes
        */
    From classschedules as cs  
        Left Join classes as cl on cs.class_id = cl.id
        Left Join classschedulefaculties as csf on cs.id = csf.classschedule_id 
        Left Join faculties as f on csf.faculty_id = f.id 
        Left Join classschedulebookings as csb on cs.id = csb.classschedule_id 
        Left Join videorecordings as vr on cs.id = vr.classschedule_id 
        Left Join recordingfeedbacks as rf on cs.id = rf.classschedule_id
    where   (f.overall_score<=5) and csb.attended_class="Yes" and csb.is_cancelled="No" and 
            (cs.class_date >= date(date_add(now(6), INTERVAL -7 day))  AND cs.class_date < date(now(6)))  
        group by f.id,cs.id,cs.class_date,cs.start_time
        order by f.id,class_date,WeekDay 
)
Select Faculty_Id,Faculty_Name,Score,Classschedule_id,Class_Date, Class_Time,WeekDay,Class_Number_of_Each_Day,Class_Name,Demo_Class,overall_comments,Overall_Rating,Video_Link,Feedback_Link, RF_Classschdeule_id 
from Low_Score_Faculty
where WeekDay in (0,2,4) and Class_Number_of_Each_Day = 1 and RF_Classschdeule_id is NULL
group by Faculty_Id,Classschedule_id
order by Faculty_Id,Class_Date,WeekDay
